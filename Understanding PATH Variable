Understanding the PATH variable

If you’ve just installed git, python or some other software that you are running on your terminal and getting an error like command not found even though your brain recalls you installing that software 2 minutes ago, then let me tell you one essential thing that you probably forgot and what you should know if you want to become a hardcore programmer…

P.S. even if you don’t, you should still learn it can come pretty handy

Environment Variables

To understand what environment variables are, we need to first understand what an environment is... which is very simple.
Basically, your computer runs on an operating system and a processor, which, combined with some other hardware, run programs… this is your “Computing Environment”.

Now just like any other C++, Java, JavaScript etc. code that you have written to print a Fibonacci series or to solve some serious programming problem, you must have come across “variables”. Well, Environment Variables are no different, they are dynamic values that define how processes run and how commands are executed. One such variable is the PATH Variable (Case sensitive, folks).

PATH Variable In General

So we have understood what Environment Variables are, amazing. The PATH Variable is one such variable which is just a list of directories (folders) where executable files are stored. Simple? Well, if not, let me explain in an easier manner.

Whenever you run a command on your favourite terminal/command prompt, like ls or dir, the way the computer, or rather the terminal, knows what to do or how to process the command is because of the PATH variable. Since ls or dir are just scripts (programs that run on your terminal) that log (print) directories in the terminal, the terminal just executes these scripts just like any other program.
Whenever you want to run any software on your computer for example, photoshop, STEAM, Slack, Spotify, etc., how do you do it? Probably by clicking the shortcut on desktop (Windows) or by opening the folder where the software is installed on your PC and running the .exe file, right? (P.S. the shortcut is just a link to where the actual .exe file is stored).

So, in order to run a program, you need to go exactly where the program is installed or use a shortcut on your desired place (so that you don't need to go to the installed folder every time you want to run that program). I hope you understand how bad and illogical the idea of “I want to run Photoshop from my NFS Most Wanted folder” sounds (P.S.you can still do it though). This is the same type of problem that you face when you encounter an error mentioned at the beginning of the article. You may have installed the software or the program but are trying to run it from an incorrect location.

This is where the PATH variable comes to your rescue. Just like you created a shortcut for your favourite applications on your desktop, the PATH Variable is a list of folders where the executables of various programs are stored. Whenever you try to run a program on your terminal, the terminal checks the PATH Variable in case such a program/script exists. If it does, well you know what happens, but what happens if it doesn’t? This is why you are reading this article, right? 

Anyways, the bottom line here is that whenever you install a new software that you want to run on your terminal, make sure that you have added it to the PATH Variable. Some of the software installations provide an option to automatically add the executable file location to the PATH Variable in your system, but you can always edit your PATH Variable to have custom scripts just at the tip of your fingers.
This may seem pretty simple but many times people forget to add the file location to the PATH variable. Hope that this article helps you and saves a little of your time. You can read other articles for the exact steps on how to edit and add more things to your PATH Variables. Thanks!

